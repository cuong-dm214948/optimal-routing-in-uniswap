"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/getPool.js":
/*!*******************************!*\
  !*** ./components/getPool.js ***!
  \*******************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar _asyncToGenerator = (__webpack_require__(/*! @swc/helpers/lib/_async_to_generator.js */ \"./node_modules/@swc/helpers/lib/_async_to_generator.js\")[\"default\"]);\nvar _slicedToArray = (__webpack_require__(/*! @swc/helpers/lib/_sliced_to_array.js */ \"./node_modules/@swc/helpers/lib/_sliced_to_array.js\")[\"default\"]);\nvar _toConsumableArray = (__webpack_require__(/*! @swc/helpers/lib/_to_consumable_array.js */ \"./node_modules/@swc/helpers/lib/_to_consumable_array.js\")[\"default\"]);\nvar _tsGenerator = (__webpack_require__(/*! @swc/helpers/lib/_ts_generator.js */ \"./node_modules/@swc/helpers/lib/_ts_generator.js\")[\"default\"]);\nvar ethers = (__webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\").ethers);\nvar axios = __webpack_require__(/*! axios */ \"./node_modules/axios/dist/browser/axios.cjs\");\nvar uniswapPrice = __webpack_require__(/*! uniswap-price */ \"./node_modules/uniswap-price/index.js\");\nvar poolAbi = [\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"amount0\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"amount1\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint160\",\n                \"name\": \"sqrtPriceX96\",\n                \"type\": \"uint160\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint128\",\n                \"name\": \"liquidity\",\n                \"type\": \"uint128\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int24\",\n                \"name\": \"tick\",\n                \"type\": \"int24\"\n            }\n        ],\n        \"name\": \"Swap\",\n        \"type\": \"event\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"slot0\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint160\",\n                \"name\": \"sqrtPriceX96\",\n                \"type\": \"uint160\"\n            },\n            {\n                \"internalType\": \"int24\",\n                \"name\": \"tick\",\n                \"type\": \"int24\"\n            },\n            {\n                \"internalType\": \"uint16\",\n                \"name\": \"observationIndex\",\n                \"type\": \"uint16\"\n            },\n            {\n                \"internalType\": \"uint16\",\n                \"name\": \"observationCardinality\",\n                \"type\": \"uint16\"\n            },\n            {\n                \"internalType\": \"uint16\",\n                \"name\": \"observationCardinalityNext\",\n                \"type\": \"uint16\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"feeProtocol\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"unlocked\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n];\nvar tokenAbi = [\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n];\nvar provider = new ethers.providers.InfuraProvider(null, \"98a0290a7a554c04888a2ff1ccdca49e\");\nvar autorouter = function() {\n    var _ref = _asyncToGenerator(function(sellToken, buyToken, amount) {\n        var URL, factoryQuery, factoryResults, poolCount, tokenIn, tokenOut, PER_PAGE, pageCount, relevantPools, i, skip, testQuery, result, pools, filteredPools, graph, routes, ref, bestRoute, bestPrice, error;\n        return _tsGenerator(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    _state.trys.push([\n                        0,\n                        7,\n                        ,\n                        8\n                    ]);\n                    URL = \"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3\";\n                    factoryQuery = '\\n        {\\n          factory(id: \"0x1F98431c8aD98523631AE4a59f267346ea31F984\") {\\n            poolCount\\n          }\\n        }\\n        ';\n                    return [\n                        4,\n                        axios.post(URL, {\n                            query: factoryQuery\n                        })\n                    ];\n                case 1:\n                    factoryResults = _state.sent();\n                    poolCount = factoryResults.data.data.factory.poolCount;\n                    console.log(\"Total number of pools:\", poolCount); //22811\n                    tokenIn = sellToken.toLowerCase();\n                    tokenOut = buyToken.toLowerCase();\n                    PER_PAGE = 1000;\n                    pageCount = Math.ceil(poolCount / PER_PAGE);\n                    console.log(pageCount);\n                    relevantPools = [];\n                    i = 0;\n                    _state.label = 2;\n                case 2:\n                    if (!(i < pageCount - 17)) return [\n                        3,\n                        5\n                    ];\n                    skip = i * PER_PAGE;\n                    testQuery = \"\\n                {\\n                    pools(first:\".concat(PER_PAGE, \", skip:\").concat(skip, \") {\\n                        id,\\n                        liquidity,\\n                        token0 {\\n                            id, symbol\\n                        },\\n                        token1 {\\n                            id, symbol\\n                        }\\n                    }\\n                }\\n            \");\n                    return [\n                        4,\n                        axios.post(URL, {\n                            query: testQuery\n                        })\n                    ];\n                case 3:\n                    result = _state.sent();\n                    pools = result.data.data.pools;\n                    filteredPools = pools.filter(function(pool) {\n                        return parseFloat(pool.liquidity) > 0 && (pool.token0.id === tokenIn || pool.token1.id === tokenIn || pool.token0.id === tokenOut || pool.token1.id === tokenOut);\n                    });\n                    relevantPools = _toConsumableArray(relevantPools).concat(_toConsumableArray(filteredPools));\n                    _state.label = 4;\n                case 4:\n                    i++;\n                    return [\n                        3,\n                        2\n                    ];\n                case 5:\n                    console.log(\"Number of relevant pools:\", relevantPools.length);\n                    graph = createGraph(relevantPools);\n                    routes = findAllRoutes(graph, tokenIn, tokenOut);\n                    return [\n                        4,\n                        getBestPriceRoute(routes, tokenIn, tokenOut, relevantPools, amount)\n                    ];\n                case 6:\n                    ref = _state.sent(), bestRoute = ref.bestRoute, bestPrice = ref.bestPrice;\n                    return [\n                        2,\n                        {\n                            bestRoute: bestRoute,\n                            bestPrice: bestPrice\n                        }\n                    ];\n                case 7:\n                    error = _state.sent();\n                    console.error(\"Error occurred:\", error);\n                    return [\n                        3,\n                        8\n                    ];\n                case 8:\n                    return [\n                        2\n                    ];\n            }\n        });\n    });\n    return function autorouter(sellToken, buyToken, amount) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar createGraph = function(pools) {\n    var graph = {};\n    pools.forEach(function(pool) {\n        var id = pool.id, token0 = pool.token0, token1 = pool.token1;\n        if (!graph[token0.id]) graph[token0.id] = [];\n        if (!graph[token1.id]) graph[token1.id] = [];\n        graph[token0.id].push({\n            token: token1.id,\n            poolId: id\n        });\n        graph[token1.id].push({\n            token: token0.id,\n            poolId: id\n        });\n    });\n    return graph;\n};\nvar findAllRoutes = function(graph, start, end) {\n    var path = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [];\n    path = path.concat(start);\n    if (start === end) {\n        return [\n            path\n        ];\n    }\n    if (!graph[start]) {\n        return [];\n    }\n    var routes = [];\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = graph[start][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var node = _step.value;\n            if (!path.includes(node.token)) {\n                var newRoutes = findAllRoutes(graph, node.token, end, path);\n                var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n                try {\n                    for(var _iterator1 = newRoutes[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                        var newRoute = _step1.value;\n                        routes.push(newRoute);\n                    }\n                } catch (err) {\n                    _didIteratorError1 = true;\n                    _iteratorError1 = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                            _iterator1.return();\n                        }\n                    } finally{\n                        if (_didIteratorError1) {\n                            throw _iteratorError1;\n                        }\n                    }\n                }\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    return routes;\n};\nvar getBestPriceRoute = function() {\n    var _ref = _asyncToGenerator(function(routes, tokenIn, tokenOut, relevantPools, amount) {\n        var bestRoute, bestPrice, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, route, price, error, err;\n        return _tsGenerator(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    bestRoute = null;\n                    bestPrice = Infinity;\n                    _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                    _state.label = 1;\n                case 1:\n                    _state.trys.push([\n                        1,\n                        8,\n                        9,\n                        10\n                    ]);\n                    _iterator = routes[Symbol.iterator]();\n                    _state.label = 2;\n                case 2:\n                    if (!!(_iteratorNormalCompletion = (_step = _iterator.next()).done)) return [\n                        3,\n                        7\n                    ];\n                    route = _step.value;\n                    _state.label = 3;\n                case 3:\n                    _state.trys.push([\n                        3,\n                        5,\n                        ,\n                        6\n                    ]);\n                    return [\n                        4,\n                        getRouteQuote(route, tokenIn, tokenOut, relevantPools, amount)\n                    ];\n                case 4:\n                    price = _state.sent();\n                    if (price < bestPrice) {\n                        bestPrice = price;\n                        bestRoute = route;\n                    }\n                    return [\n                        3,\n                        6\n                    ];\n                case 5:\n                    error = _state.sent();\n                    console.error(\"Error getting quote for route\", route, error);\n                    return [\n                        3,\n                        6\n                    ];\n                case 6:\n                    _iteratorNormalCompletion = true;\n                    return [\n                        3,\n                        2\n                    ];\n                case 7:\n                    return [\n                        3,\n                        10\n                    ];\n                case 8:\n                    err = _state.sent();\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                    return [\n                        3,\n                        10\n                    ];\n                case 9:\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                    return [\n                        7\n                    ];\n                case 10:\n                    return [\n                        2,\n                        {\n                            bestRoute: bestRoute,\n                            bestPrice: bestPrice\n                        }\n                    ];\n            }\n        });\n    });\n    return function getBestPriceRoute(routes, tokenIn, tokenOut, relevantPools, amount) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar getRouteQuote = function() {\n    var _ref = _asyncToGenerator(function(route, tokenIn, tokenOut, relevantPools, amount) {\n        var token0, token1, token2, decimals0Promise, decimals1Promise, decimals2Promise, ref, decimals0, decimals1, decimals2, data3;\n        return _tsGenerator(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    token0 = route[0];\n                    token1 = route[1];\n                    token2 = route[2];\n                    decimals0Promise = new ethers.Contract(token0, tokenAbi, provider).decimals();\n                    decimals1Promise = new ethers.Contract(token1, tokenAbi, provider).decimals();\n                    decimals2Promise = new ethers.Contract(token2, tokenAbi, provider).decimals();\n                    return [\n                        4,\n                        Promise.all([\n                            decimals0Promise,\n                            decimals1Promise,\n                            decimals2Promise\n                        ])\n                    ];\n                case 1:\n                    ref = _slicedToArray.apply(void 0, [\n                        _state.sent(),\n                        3\n                    ]), decimals0 = ref[0], decimals1 = ref[1], decimals2 = ref[2];\n                    decimals0 = Number(decimals0); // Ensure decimals are of type number\n                    decimals1 = Number(decimals1); // Ensure decimals are of type number\n                    decimals2 = Number(decimals2);\n                    return [\n                        4,\n                        uniswapPrice.getMidPriceViaExactToken(token0, decimals0, token2, decimals2, token1, decimals1)\n                    ];\n                case 2:\n                    data3 = _state.sent();\n                    console.log(\"data3\", data3.base2quote);\n                    return [\n                        2,\n                        data3.base2quote\n                    ];\n            }\n        });\n    });\n    return function getRouteQuote(route, tokenIn, tokenOut, relevantPools, amount) {\n        return _ref.apply(this, arguments);\n    };\n}();\nmodule.exports = {\n    autorouter: autorouter\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/getPool.js\n"));

/***/ })

});